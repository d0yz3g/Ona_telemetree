"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π –æ—Ç–≤–µ—Ç–æ–≤ –≤ –æ–ø—Ä–æ—Å–Ω–∏–∫–µ.
"""

import asyncio
from typing import Dict, Any

async def test_interpretations():
    """
    –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π –æ—Ç–≤–µ—Ç–æ–≤.
    """
    from questions import get_all_vasini_questions
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    vasini_questions = get_all_vasini_questions()
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∞
    test_question = vasini_questions[0]
    print(f"\n–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å: {test_question['text']}")
    
    # –í—ã–≤–æ–¥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    print("\n–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:")
    for option, text in test_question['options'].items():
        print(f"{option}: {text}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    print("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π:")
    for option in ["A", "B", "C", "D"]:
        try:
            interpretation = test_question["interpretations"][option]
            print(f"\nüîç –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ {option}:")
            print(f"{interpretation}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ {option}: {e}")
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π –≤–æ–ø—Ä–æ—Å–æ–≤...")
    asyncio.run(test_interpretations()) 