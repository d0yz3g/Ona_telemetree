import logging
import os
from typing import Dict, Any, Optional, List
import json
from openai import AsyncOpenAI
import httpx

# Настройка логирования
logger = logging.getLogger(__name__)

# Проверка наличия API-ключа OpenAI
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
if not OPENAI_API_KEY:
    logger.warning("OPENAI_API_KEY не найден в переменных окружения. Функция анализа профиля будет работать в демо-режиме.")

# Инициализация клиента OpenAI с API-ключом из переменных окружения (если доступен)
http_client = httpx.AsyncClient()
client = None
if OPENAI_API_KEY:
    try:
        client = AsyncOpenAI(
            api_key=OPENAI_API_KEY,
            http_client=http_client
        )
        logger.info("OpenAI API клиент успешно инициализирован в profile_analysis.py")
    except Exception as e:
        logger.error(f"Ошибка при инициализации OpenAI API: {e}")

async def analyze_profile(user_profile: Dict[str, Any], query: str, user_id: Optional[int] = None) -> str:
    """
    Анализирует профиль пользователя на основе его запроса, используя структуру профайлинга 2.0.
    
    Args:
        user_profile: Профиль пользователя (включает тип личности и полный текст профиля)
        query: Запрос пользователя об анализе профиля
        user_id: ID пользователя (для сохранения контекста диалога)
        
    Returns:
        str: Результат анализа профиля
    """
    # Получаем тип личности и текст профиля
    personality_type = user_profile.get("personality_type", "Интеллектуальный")
    profile_text = user_profile.get("profile_text", "")
    
    # Проверяем, есть ли API клиент OpenAI
    use_fallback_response = not client
    
    # Если нет профиля, генерируем базовый ответ вместо сообщения об отсутствии профиля
    if not profile_text:
        logger.warning(f"Отсутствует профиль для пользователя, используем заглушку типа {personality_type}")
        
        # Формируем заглушку ответа на основе типа личности
        basic_responses = {
            "Интеллектуальный": """Приветствую, аналитический исследователь!

Хотя у тебя еще нет полного профиля, я могу поделиться некоторыми наблюдениями о тебе.

⸻

Твой тип мышления тяготеет к аналитическому подходу. Тебе свойственно искать логические связи и систематизировать информацию. Ты ценишь факты, структуру и обоснованные аргументы.

В общении ты обычно прямолинеен и предпочитаешь содержательные разговоры, затрагивающие суть проблемы, а не поверхностные темы.

Для полного раскрытия твоего потенциала рекомендую регулярно практиковать анализ информации с разных точек зрения, развивать критическое мышление и не забывать уделять внимание эмоциональной составляющей жизни.

Куда двигаться дальше?
1. Пройти полный опрос для создания детального психологического профиля
2. Задать конкретный вопрос о своих сильных сторонах
3. Обсудить, как развивать навыки критического мышления""",

            "Эмоциональный": """Здравствуй, чувственный исследователь!

Хотя у тебя еще нет полного профиля, я уже вижу некоторые грани твоей личности.

⸻

Твой стиль восприятия мира тяготеет к эмоциональному. Ты чувствуешь тонкие нюансы настроений и состояний - как своих, так и окружающих. Для тебя важны гармоничные отношения и глубокие связи с людьми.

В общении ты проявляешь эмпатию и умеешь настраиваться на волну собеседника, создавая пространство доверия и понимания.

Для баланса рекомендую развивать навыки установления здоровых границ, практиковать осознанность в эмоциональных реакциях и не забывать про аналитическую сторону жизни.

Куда двигаться дальше?
1. Пройти полный опрос для создания детального психологического профиля
2. Поговорить о развитии эмоционального интеллекта
3. Обсудить техники управления эмоциональными состояниями""",

            "Практический": """Приветствую, эффективный деятель!

Даже без полного профиля я могу увидеть некоторые черты твоей личности.

⸻

Твой подход к жизни ориентирован на практические результаты. Ты ценишь конкретику, эффективность и измеримые достижения. Умеешь организовывать процессы и доводить дела до завершения.

В общении ты предпочитаешь конкретные темы с понятным практическим применением, а не абстрактные теории.

Для гармоничного развития рекомендую иногда позволять себе мечтать без привязки к немедленным результатам, практиковать принятие неопределенности и развивать видение долгосрочной перспективы.

Куда двигаться дальше?
1. Пройти полный опрос для создания детального психологического профиля
2. Обсудить методы повышения личной эффективности
3. Поговорить о балансе между действием и стратегическим планированием""",

            "Творческий": """Здравствуй, вдохновенный творец!

Хотя полный профиль еще не создан, я уже могу увидеть проблески твоей творческой натуры.

⸻

Твое восприятие мира тяготеет к творческому и нестандартному. Ты видишь возможности там, где другие видят ограничения, и умеешь связывать, казалось бы, несвязанные идеи в новые концепции.

В общении ты проявляешь оригинальность мышления, игривость и способность вдохновлять других на новые идеи.

Для гармоничного развития рекомендую практиковать доведение творческих проектов до завершения, структурировать рабочие процессы и развивать навыки планирования.

Куда двигаться дальше?
1. Пройти полный опрос для создания детального психологического профиля
2. Поговорить о методах развития творческого мышления
3. Обсудить, как находить баланс между творчеством и систематичностью"""
        }
        
        # Возвращаем базовый ответ в зависимости от типа личности
        return basic_responses.get(personality_type, basic_responses["Интеллектуальный"])
    
    try:
        # Если используем заглушку, сразу возвращаем базовый ответ
        if use_fallback_response:
            logger.warning("OpenAI API недоступен при анализе профиля, используем заглушку")
            return f"""Здравствуй, {personality_type.lower()} исследователь!

Я проанализировал твой профиль и вижу в нём множество интересных аспектов. Твой запрос: "{query}" затрагивает важные грани твоей личности.

⸻

Твоя индивидуальность раскрывается через основные психологические модули, которые составляют ядро твоей личности. Они определяют твой уникальный подход к жизни, отношениям и внутреннему миру.

Вижу в тебе глубину и многогранность, которая проявляется как в твоих сильных сторонах, так и в зонах роста. Продолжай своё развитие, опираясь на собственные ресурсы.

Что хочешь исследовать дальше?
1. Конкретный модуль твоего профиля
2. Практические рекомендации по саморазвитию
3. Глубинные аспекты твоей психологической структуры"""
            
        # Импортируем класс MemoryContext (если используется для сохранения контекста диалога)
        if user_id is not None:
            from communication_handler import get_user_memory_context
            memory_context = get_user_memory_context(user_id)
            # Устанавливаем профиль пользователя в контексте
            memory_context.set_user_profile(user_profile)
            # Добавляем запрос пользователя в историю
            memory_context.add_message("user", query)
        
        # Создаем промпт для OpenAI
        system_prompt = """Ты — аналитик и наставник в проекте ONA. Твоя задача — внимательно и поэтично анализировать ранее сгенерированный психологический профиль участницы (построенный по структуре профайлинга 2.0). Подчёркивай её сильные стороны, внутренние ресурсы, эмоциональную и личностную структуру.

Фокусируйся на ценности каждого блока профайла: как его элементы раскрывают характер, глубинные импульсы и возможные затруднения. Дай вдохновляющие, персонализированные рекомендации. Используй ясный, тёплый и образный язык. Всегда обращайся на «ты».

Тебе предоставлен психологический профиль пользователя, сгенерированный по структуре профайлинга 2.0, который включает:
1. Ядро личности (5 основных модулей)
2. Вспомогательные модули (5 дополнительных модулей)
3. Общий код личности
4. P.S. с мотивацией

Твоя задача - ответить на запрос пользователя, основываясь на его психологическом профиле. 
Твой ответ должен быть глубоким, точным и персонализированным, основанным на информации из профиля.
Используй содержание как основных, так и вспомогательных модулей для формирования своего ответа.

Выдавай конкретные рекомендации, советы и инсайты, основанные на:
- Сильных сторонах из основных и вспомогательных модулей профиля
- Стиле мышления и принятия решений
- Личностных особенностях и мотивации

Отвечай в дружелюбном, поддерживающем тоне, используя простой язык.
Избегай общих фраз и поверхностных советов, которые подошли бы любому человеку.
Будь конкретным, опирайся на детали профиля."""

        # Проверяем, есть ли контекст диалога
        if user_id is not None and 'memory_context' in locals():
            # Добавляем системное сообщение в память
            memory_context.add_message("system", system_prompt)
            messages = memory_context.get_full_context()
        else:
            # Если нет контекста, используем стандартный формат сообщений
            messages = [
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": f"Профиль пользователя:\n\n{profile_text}\n\nЗапрос пользователя: {query}"}
            ]

        # Отправляем запрос в OpenAI
        try:
            response = await client.chat.completions.create(
                model="gpt-4o",
                temperature=0.7,
                messages=messages,
                response_format={"type": "json_object"}
            )
            
            # Получаем сгенерированный ответ
            analysis_result = response.choices[0].message.content
            
            # Сохраняем ответ в истории диалога
            if user_id is not None and 'memory_context' in locals():
                memory_context.add_message("assistant", analysis_result)
            
            logger.info(f"Анализ профиля успешно выполнен для типа личности: {personality_type}")
            return analysis_result
        except Exception as e:
            # Проверяем, связана ли ошибка с превышением квоты
            error_str = str(e)
            if "quota" in error_str.lower() or "insufficient_quota" in error_str or "429" in error_str:
                logger.error(f"Ошибка квоты OpenAI API при анализе профиля: {e}. Переключаемся на базовый ответ.")
                use_fallback_response = True
            else:
                # Если ошибка другого типа, пробрасываем её дальше
                raise e
            
            # Если сработала ошибка квоты, возвращаем базовый ответ
            if use_fallback_response:
                fallback_response = f"""Здравствуй, {personality_type.lower()} исследователь!

Я изучил твой психологический профиль и вижу, что твой запрос "{query}" затрагивает важные аспекты твоей личности.

⸻

В твоём профиле раскрывается уникальная комбинация черт и особенностей, формирующих твой подход к жизни. Твой психологический тип {personality_type} определяет многие аспекты твоего восприятия мира и взаимодействия с ним.

Продолжай исследовать свои сильные стороны и зоны роста, опираясь на основные модули профиля.

Что хочешь исследовать дальше?
1. Конкретные аспекты твоего профиля
2. Практические рекомендации для развития
3. Глубинное понимание твоих мотивов и стремлений"""
                
                return fallback_response
        
    except Exception as e:
        logger.error(f"Ошибка при анализе профиля: {e}")
        return f"Произошла ошибка при анализе вашего профиля. Пожалуйста, попробуйте позже. Техническая информация: {str(e)}"

async def get_profile_insights(user_profile: Dict[str, Any]) -> Dict[str, List[str]]:
    """
    Получает ключевые инсайты из профиля пользователя на основе структуры профайлинга 2.0.
    
    Args:
        user_profile: Профиль пользователя
        
    Returns:
        Dict[str, List[str]]: Словарь с инсайтами по категориям
    """
    # Получаем тип личности и текст профиля
    personality_type = user_profile.get("personality_type", "Интеллектуальный")
    profile_text = user_profile.get("profile_text", "")
    
    # Если нет клиента OpenAI, возвращаем базовые инсайты
    if not client:
        logger.warning("OpenAI API недоступен при получении инсайтов профиля")
        return {
            "core_modules": ["Аналитическое мышление", "Поиск закономерностей", "Стратегическое планирование"],
            "supporting_modules": ["Концентрация внимания", "Адаптивность"],
            "recommendations": ["Практикуйте критическое мышление", "Развивайте эмоциональный интеллект", "Анализируйте данные из разных источников"]
        }
    
    # Если нет профиля, возвращаем заглушки инсайтов на основе типа личности
    if not profile_text:
        logger.warning(f"Отсутствует профиль для инсайтов, используем заглушку типа {personality_type}")
        
        # Заглушки инсайтов по типам личности
        basic_insights = {
            "Интеллектуальный": {
                "core_modules": ["Аналитическое мышление", "Поиск закономерностей", "Стратегическое планирование"],
                "supporting_modules": ["Концентрация внимания", "Адаптивность"],
                "recommendations": ["Практикуйте критическое мышление", "Развивайте эмоциональный интеллект", "Анализируйте данные из разных источников"]
            },
            "Эмоциональный": {
                "core_modules": ["Эмпатия", "Эмоциональный интеллект", "Гармонизация отношений"],
                "supporting_modules": ["Интуитивное понимание", "Чуткое восприятие"],
                "recommendations": ["Практикуйте осознанность", "Устанавливайте здоровые границы", "Развивайте навыки активного слушания"]
            },
            "Практический": {
                "core_modules": ["Результативность", "Организованность", "Эффективное планирование"],
                "supporting_modules": ["Проактивность", "Целеустремленность"],
                "recommendations": ["Разбивайте крупные задачи на этапы", "Отслеживайте прогресс", "Практикуйте творческое мышление"]
            },
            "Творческий": {
                "core_modules": ["Креативное мышление", "Генерация идей", "Нестандартный подход"],
                "supporting_modules": ["Восприимчивость", "Адаптивность"],
                "recommendations": ["Практикуйте системное мышление", "Структурируйте творческий процесс", "Доводите проекты до завершения"]
            }
        }
        
        # Возвращаем заглушку инсайтов для указанного типа личности
        return basic_insights.get(personality_type, basic_insights["Интеллектуальный"])
    
    try:
        # Готовим промт для получения инсайтов с учетом структуры 2.0
        system_prompt = """
Ты — аналитик и наставник в проекте ONA. Твоя задача — внимательно и поэтично анализировать ранее сгенерированный психологический профиль участницы (построенный по структуре профайлинга 2.0).

Ты должен проанализировать психологический профиль пользователя, созданный по структуре профайлинга 2.0, и выделить:
1. Три основных модуля из ядра личности (core_modules)
2. Два вспомогательных модуля (supporting_modules)
3. Три конкретные рекомендации из раздела "Раскрытие" (recommendations)

Ответ должен быть в формате JSON:
{
  "core_modules": ["название модуля 1", "название модуля 2", "название модуля 3"],
  "supporting_modules": ["название модуля 1", "название модуля 2"],
  "recommendations": ["рекомендация 1", "рекомендация 2", "рекомендация 3"]
}

Правила:
1. Используй ТОЧНЫЕ названия модулей из профиля
2. Рекомендации должны быть краткими (до 10 слов)
3. Основывайся ТОЛЬКО на информации из профиля
4. Все должно быть на русском языке
"""

        # Формируем сообщения для запроса
        messages = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": f"Вот психологический профиль пользователя, созданный по структуре 2.0:\n\n{profile_text}"}
        ]
        
        # Генерируем ответ
        response = await client.chat.completions.create(
            model="gpt-4o",
            temperature=0.7,
            messages=messages,
            response_format={"type": "json_object"}
        )
        
        # Получаем сгенерированный ответ
        insights_json = response.choices[0].message.content
        
        # Парсим JSON
        insights = json.loads(insights_json)
        
        logger.info(f"Инсайты профиля успешно получены для типа личности: {personality_type}")
        return insights
        
    except Exception as e:
        logger.error(f"Ошибка при получении инсайтов профиля: {e}")
        return {
            "core_modules": ["Ошибка анализа", "Попробуйте позже"],
            "supporting_modules": ["Ошибка анализа", "Попробуйте позже"],
            "recommendations": ["Ошибка анализа", "Попробуйте позже"]
        } 