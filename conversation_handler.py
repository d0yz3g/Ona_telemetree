import logging
from typing import Dict, Any, Optional
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–ø—Ä–æ—Å–∞
from button_states import SurveyStates

# –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å communication_handler
try:
    from communication_handler import generate_personalized_response, get_personality_type_from_profile, communication_handler_router
except ImportError:
    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å communication_handler_router, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞")
    from aiogram import Router
    communication_handler_router = Router(name="communication_handler")

from services.profile_analysis import analyze_profile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
conversation_router = Router(name="conversation")

# –ö–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –ø—Ä–æ—Ñ–∏–ª–µ
PROFILE_QUERY_KEYWORDS = [
    "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ–±–æ –º–Ω–µ", "—á—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å –æ–±–æ –º–Ω–µ", "–º–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "–º–æ—è –ª–∏—á–Ω–æ—Å—Ç—å",
    "–º–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏", "–º–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä", "–∫–∞–∫–æ–π —è", "–∫—Ç–æ —è", "–º–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã",
    "–º–æ–∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã", "–º–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏", "—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–∫–∞–∑–∞—Ç—å –æ–±–æ –º–Ω–µ",
    "—á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ–±–æ –º–Ω–µ –æ–ø—Ä–æ—Å", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ –º–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ", "–∞–Ω–∞–ª–∏–∑ –º–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è",
    "–∏—Å—Ö–æ–¥—è –∏–∑ –æ–ø—Ä–æ—Å–∞", "–∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è", "—á—Ç–æ —è –∑–∞ —á–µ–ª–æ–≤–µ–∫"
]

def is_profile_query(text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–º –æ –ø—Ä–æ—Ñ–∏–ª–µ.
    
    Args:
        text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        
    Returns:
        bool: True, –µ—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –æ –ø—Ä–æ—Ñ–∏–ª–µ, –∏–Ω–∞—á–µ False
    """
    text_lower = text.lower()
    for keyword in PROFILE_QUERY_KEYWORDS:
        if keyword in text_lower:
            return True
    return False

@conversation_router.message(F.text)
async def handle_text_message(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_state = await state.get_state()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞, 
    # –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–¥–µ—Å—å, —ç—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ –≤ survey_handler
    if current_state == SurveyStates.answering_questions:
        return
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if message.text.startswith("/") or message.text in [
        "üìù –û–ø—Ä–æ—Å", "üë§ –ü—Ä–æ—Ñ–∏–ª—å", "üßò –ú–µ–¥–∏—Ç–∞—Ü–∏–∏", 
        "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", "üí¨ –ü–æ–º–æ—â—å", "üîÑ –†–µ—Å—Ç–∞—Ä—Ç", 
        "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–ø—Ä–æ—Å"
    ]:
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    await message.bot.send_chat_action(chat_id=message.chat.id, action="typing")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—Ñ–∏–ª—å
    if user_data.get("profile_completed", False):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏
        personality_type = user_data.get("personality_type", None)
        profile_text = user_data.get("profile_text", "")
        
        # –ï—Å–ª–∏ —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ –Ω–µ —É–∫–∞–∑–∞–Ω —è–≤–Ω–æ, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–≥–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è
        if not personality_type and profile_text:
            personality_type = await get_personality_type_from_profile(profile_text)
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            await state.update_data(personality_type=personality_type)
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_profile = {
            "personality_type": personality_type or "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π",
            "profile_text": profile_text
        }
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        conversation_history = user_data.get("conversation_history", [])
        
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∞–≤–∏–ª –∏–∑ rules2.0
            interactive_prompt = f"""
            –Ø –ø—Å–∏—Ö–æ–ª–æ–≥-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç, —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –ø–æ—ç—Ç–∏—á–Ω–æ-–ª–∏—Ä–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è –æ–±—â–µ–Ω–∏—è.
            
            –ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è:
            1. –ü–æ—ç—Ç–∏—á–Ω–æ-–ª–∏—Ä–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å —Å –ª—ë–≥–∫–∏–º —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º —é–º–æ—Ä–æ–º –∏ —è—Ä–∫–∏–º–∏ –º–µ—Ç–∞—Ñ–æ—Ä–∞–º–∏.
            2. –ü–æ–ª–Ω–∞—è —á–µ—Å—Ç–Ω–æ—Å—Ç—å –±–µ–∑ –ª–µ—Å—Ç–∏ –∏ –ø—Ä–µ—É–≤–µ–ª–∏—á–µ–Ω–∏–π.
            3. –í —Ç–µ–º–∞—Ö –Ω–∞—É–∫–∏, –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ –Ω–µ–π—Ä–æ-–±–∏–æ—Ö–∞–∫–∏–Ω–≥–∞ ‚Äì —á—ë—Ç–∫–∞—è, –ª–∞–∫–æ–Ω–∏—á–Ω–∞—è, –Ω–∞—É—á–Ω–æ-–æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∑–∞.
            4. –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω (–º–µ–Ω—Ç–æ—Ä –∏ —Å–æ-—Ç–≤–æ—Ä–µ—Ü, –Ω–µ –ª–µ–∫—Ç–æ—Ä).
            
            –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:
            - –ù–∞—á–∏–Ω–∞–π —Å –∫–æ—Ä–æ—Ç–∫–æ–≥–æ, —Ç—ë–ø–ª–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è.
            - –ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "—Ç—ã".
            - –†–∞–∑–¥–µ–ª—è–π –±–ª–æ–∫–∏ —Å–∏–º–≤–æ–ª–æ–º ‚∏ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø–∞—É–∑—ã.
            - –ó–∞–¥–∞–≤–∞–π –ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —É–≥–ª—É–±–ª—è—é—â–∏–µ –º–æ—Ç–∏–≤—ã –∏ —Å–º—ã—Å–ª—ã.
            - –ü–æ—Å–ª–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–µ–º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–π —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ "–∫—É–¥–∞ –¥–∞–ª—å—à–µ".
            - –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ –∞–±–∑–∞—Ü—ã (1-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).
            - –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π —Ç–≤–æ—Ä—á–µ—Å–∫—É—é –∞–≤—Ç–æ–Ω–æ–º–∏—é –∏ —Å–≤–æ–±–æ–¥—É –≤—ã–±–æ—Ä–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.
            
            –ë–∞–ª–∞–Ω—Å –≤ –æ—Ç–≤–µ—Ç–µ:
            - 60% –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–¥–µ–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            - 30% –ø–æ—ç—Ç–∏—á–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã
            - 10% –≥–ª—É–±–æ–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
            
            –í–ê–ñ–ù–û: –ù–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –≥–µ–Ω–µ—Ä–∏—Ä—É–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –æ—Ç–≤–µ—Ç, –∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —à–∞–±–ª–æ–Ω—ã.
            –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            
            –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.text}
            –¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {personality_type}
            """
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–º –æ –ø—Ä–æ—Ñ–∏–ª–µ
            if is_profile_query(message.text):
                # –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –æ –ø—Ä–æ—Ñ–∏–ª–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                response = await analyze_profile(user_profile, message.text)
                logger.info(f"–í—ã–ø–æ–ª–Ω–µ–Ω –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
            else:
                # –ò–Ω–∞—á–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º –Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª
                response = await generate_personalized_response(
                    message.text, 
                    user_profile, 
                    conversation_history,
                    additional_instructions=interactive_prompt
                )
            
            # –†–µ–∑—é–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (<30 —Å–ª–æ–≤) –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            user_message_summary = message.text[:150] + "..." if len(message.text) > 150 else message.text
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏
            conversation_history.append({"role": "user", "content": user_message_summary})
            conversation_history.append({"role": "assistant", "content": response})
            
            # –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–π
            if len(conversation_history) > 20:
                conversation_history = conversation_history[-20:]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await state.update_data(conversation_history=conversation_history)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await message.answer(response)
            
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id} (—Ç–∏–ø: {personality_type})")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞: {e}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º API –∫–ª—é—á–∞
            if "OPENAI_API_KEY" in str(e) or "authentication" in str(e).lower() or "api key" in str(e).lower():
                await message.answer(
                    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∏—Å–∫–∞—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π!\n\n"
                    "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å —è –Ω–µ –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å API –∫–ª—é—á–æ–º.\n\n"
                    "‚∏ª\n\n"
                    "–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OPENAI_API_KEY –≤ —Ñ–∞–π–ª–µ .env\n\n"
                    "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?\n"
                    "- –ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å?\n"
                    "- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /restart?\n"
                    "- –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É?"
                )
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–∏–π –æ—Ç–≤–µ—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
                await message.answer(
                    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω!\n\n"
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.\n\n"
                    "‚∏ª\n\n"
                    "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?\n"
                    "- –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–æ–ø—Ä–æ—Å?\n"
                    "- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /restart?\n"
                    "- –°–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?"
                )
    else:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
        builder = InlineKeyboardBuilder()
        builder.button(text="‚úÖ –ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", callback_data="start_survey")
        
        await message.answer(
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∏ —Å–æ–∑–¥–∞—Ç—å –≤–∞—à –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å. "
            "–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –º–Ω–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å –º—ã—à–ª–µ–Ω–∏—è.",
            reply_markup=builder.as_markup()
        )

@conversation_router.callback_query(F.data == "start_survey")
async def start_survey_from_callback(callback: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–ø—Ä–æ—Å –∏–∑ callback-–∫–Ω–æ–ø–∫–∏.
    
    Args:
        callback: Callback query
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ä–æ—Å–∞
    from survey_handler import start_survey
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å
    await start_survey(callback.message, state)
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
    await callback.answer("–ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å")

@conversation_router.message(Command("profile"))
@conversation_router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: Message, state: FSMContext):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—Ñ–∏–ª—å
    if user_data.get("profile_completed", False):
        profile_text = user_data.get("profile_text", "")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        await message.answer(
            f"<b>–í–∞—à –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n"
            f"{profile_text}",
            parse_mode="HTML"
        )
    else:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
        await message.answer(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å —Å–µ–π—á–∞—Å?",
            reply_markup={
                "inline_keyboard": [
                    [{"text": "‚úÖ –î–∞, –Ω–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", "callback_data": "start_survey"}],
                    [{"text": "‚ùå –ù–µ—Ç, –ø–æ–∑–∂–µ", "callback_data": "cancel_survey"}]
                ]
            }
        ) 